   1               		.file	"main.c"
   2               	__SP_H__ = 0x3e
   3               	__SP_L__ = 0x3d
   4               	__SREG__ = 0x3f
   5               	__RAMPZ__ = 0x3b
   6               	__tmp_reg__ = 0
   7               	__zero_reg__ = 1
   8               		.text
   9               	.Ltext0:
  10               		.cfi_sections	.debug_frame
  11               		.section	.text.startup,"ax",@progbits
  12               	.global	main
  14               	main:
  15               	.LFB12:
  16               		.file 1 "src/main.c"
   1:src/main.c    **** #define F_CPU 16000000UL
   2:src/main.c    **** 
   3:src/main.c    **** #include <avr/io.h>
   4:src/main.c    **** #include <util/delay.h>
   5:src/main.c    **** #include "CanBus.h"
   6:src/main.c    **** #include "uart0.h"
   7:src/main.c    **** #include "Pin.h"
   8:src/main.c    **** #include "BinarySensor.h"
   9:src/main.c    **** #include "PwmBrushless.h"
  10:src/main.c    **** #include "ADC.h"
  11:src/main.c    **** #include "Config.h"
  12:src/main.c    **** 
  13:src/main.c    **** 
  14:src/main.c    **** 
  15:src/main.c    **** /*void HBridge_Add(Pin* inA, Pin* inB, Pin* inH, PinFrequency frequency) {
  16:src/main.c    **** 
  17:src/main.c    **** 	Pin_SetMode(inA, PIN_OUTPUT);
  18:src/main.c    **** 	Pin_SetMode(inB, PIN_OUTPUT);
  19:src/main.c    **** 	Pin_SetMode(inH, PIN_OUTPUT);
  20:src/main.c    **** 
  21:src/main.c    **** 	Pin_EnableAnalog(inA, frequency);
  22:src/main.c    **** }
  23:src/main.c    **** */
  24:src/main.c    **** int main() {
  17               		.loc 1 24 0
  18               		.cfi_startproc
  19 0000 CF93      		push r28
  20               	.LCFI0:
  21               		.cfi_def_cfa_offset 3
  22               		.cfi_offset 28, -2
  23 0002 DF93      		push r29
  24               	.LCFI1:
  25               		.cfi_def_cfa_offset 4
  26               		.cfi_offset 29, -3
  27 0004 CDB7      		in r28,__SP_L__
  28 0006 DEB7      		in r29,__SP_H__
  29               	.LCFI2:
  30               		.cfi_def_cfa_register 28
  31 0008 2E97      		sbiw r28,14
  32               	.LCFI3:
  33               		.cfi_def_cfa_offset 18
  34 000a 0FB6      		in __tmp_reg__,__SREG__
  35 000c F894      		cli
  36 000e DEBF      		out __SP_H__,r29
  37 0010 0FBE      		out __SREG__,__tmp_reg__
  38 0012 CDBF      		out __SP_L__,r28
  39               	/* prologue: function */
  40               	/* frame size = 14 */
  41               	/* stack size = 16 */
  42               	.L__stack_usage = 16
  25:src/main.c    **** 
  26:src/main.c    **** 
  27:src/main.c    **** 	char uart_char;
  28:src/main.c    **** 
  29:src/main.c    **** 	sei();
  43               		.loc 1 29 0
  44               	/* #APP */
  45               	 ;  29 "src/main.c" 1
  46 0014 7894      		sei
  47               	 ;  0 "" 2
  30:src/main.c    **** 
  31:src/main.c    **** 	/* CANbus Initialisation */
  32:src/main.c    **** 	CANbus_Init();
  48               		.loc 1 32 0
  49               	/* #NOAPP */
  50 0016 0E94 0000 		call CANbus_Init
  51               	.LVL0:
  33:src/main.c    **** 
  34:src/main.c    **** 	/* UART0 for DEBUG Initialisation */
  35:src/main.c    ****   USART0_init(57600);
  52               		.loc 1 35 0
  53 001a 60E0      		ldi r22,0
  54 001c 71EE      		ldi r23,lo8(-31)
  55 001e 80E0      		ldi r24,0
  56 0020 90E0      		ldi r25,0
  57 0022 0E94 0000 		call USART0_init
  58               	.LVL1:
  36:src/main.c    **** 
  37:src/main.c    **** 	/* Brushless EDF Initialisation on pin*/
  38:src/main.c    ****   Brushless_Init(&Pin_B5);
  59               		.loc 1 38 0
  60 0026 80E0      		ldi r24,lo8(Pin_B5)
  61 0028 90E0      		ldi r25,hi8(Pin_B5)
  62 002a 0E94 0000 		call Brushless_Init
  63               	.LVL2:
  39:src/main.c    **** 
  40:src/main.c    **** 
  41:src/main.c    ****   USART0_transmit('k');
  64               		.loc 1 41 0
  65 002e 8BE6      		ldi r24,lo8(107)
  66 0030 0E94 0000 		call USART0_transmit
  67               	.LVL3:
  68               	.L2:
  42:src/main.c    **** 
  43:src/main.c    ****   while(1) {
  44:src/main.c    **** 
  45:src/main.c    **** 		if (can_check_message()) {
  69               		.loc 1 45 0
  70 0034 0E94 0000 		call can_check_message
  71               	.LVL4:
  72 0038 8823      		tst r24
  73 003a 01F0      		breq .L2
  74               	.LBB2:
  46:src/main.c    **** 			can_t msg;
  47:src/main.c    **** 
  48:src/main.c    **** 			if (can_get_message(&msg)) {
  75               		.loc 1 48 0
  76 003c CE01      		movw r24,r28
  77 003e 0196      		adiw r24,1
  78 0040 0E94 0000 		call can_get_message
  79               	.LVL5:
  80 0044 8823      		tst r24
  81 0046 01F0      		breq .L2
  49:src/main.c    **** 
  50:src/main.c    **** 				Brushless_Update(&msg);
  82               		.loc 1 50 0
  83 0048 CE01      		movw r24,r28
  84 004a 0196      		adiw r24,1
  85 004c 0E94 0000 		call Brushless_Update
  86               	.LVL6:
  87 0050 00C0      		rjmp .L2
  88               	.LBE2:
  89               		.cfi_endproc
  90               	.LFE12:
  92               		.text
  93               	.Letext0:
  94               		.file 2 "/usr/lib/avr/include/stdint.h"
  95               		.file 3 "./libs/can/can.h"
  96               		.file 4 "src/Pin.h"
  97               		.file 5 "src/PwmBrushless.h"
  98               		.file 6 "src/uart0.h"
  99               		.file 7 "src/CanBus.h"
DEFINED SYMBOLS
                            *ABS*:0000000000000000 main.c
     /tmp/ccrZqocC.s:2      *ABS*:000000000000003e __SP_H__
     /tmp/ccrZqocC.s:3      *ABS*:000000000000003d __SP_L__
     /tmp/ccrZqocC.s:4      *ABS*:000000000000003f __SREG__
     /tmp/ccrZqocC.s:5      *ABS*:000000000000003b __RAMPZ__
     /tmp/ccrZqocC.s:6      *ABS*:0000000000000000 __tmp_reg__
     /tmp/ccrZqocC.s:7      *ABS*:0000000000000001 __zero_reg__
     /tmp/ccrZqocC.s:14     .text.startup:0000000000000000 main

UNDEFINED SYMBOLS
CANbus_Init
USART0_init
Pin_B5
Brushless_Init
USART0_transmit
can_check_message
can_get_message
Brushless_Update
